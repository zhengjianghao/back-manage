{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _rcCascader = _interopRequireDefault(require(\"rc-cascader\"));\nvar _arrayTreeFilter = _interopRequireDefault(require(\"array-tree-filter\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _omit = _interopRequireDefault(require(\"omit.js\"));\nvar _KeyCode = _interopRequireDefault(require(\"rc-util/lib/KeyCode\"));\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\nvar _input = _interopRequireDefault(require(\"../input\"));\nvar _icon = _interopRequireDefault(require(\"../icon\"));\nvar _configProvider = require(\"../config-provider\");\nvar _LocaleReceiver = _interopRequireDefault(require(\"../locale-provider/LocaleReceiver\"));\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n// We limit the filtered item count by default\nvar defaultLimit = 50;\nfunction highlightKeyword(str, keyword, prefixCls) {\n  return str.split(keyword).map(function (node, index) {\n    return index === 0 ? node : [/*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-menu-item-keyword\"),\n      key: \"seperator\"\n    }, keyword), node];\n  });\n}\nfunction defaultFilterOption(inputValue, path, names) {\n  return path.some(function (option) {\n    return option[names.label].indexOf(inputValue) > -1;\n  });\n}\nfunction defaultRenderFilteredOption(inputValue, path, prefixCls, names) {\n  return path.map(function (option, index) {\n    var label = option[names.label];\n    var node = label.indexOf(inputValue) > -1 ? highlightKeyword(label, inputValue, prefixCls) : label;\n    return index === 0 ? node : [' / ', node];\n  });\n}\nfunction defaultSortFilteredOption(a, b, inputValue, names) {\n  function callback(elem) {\n    return elem[names.label].indexOf(inputValue) > -1;\n  }\n  return a.findIndex(callback) - b.findIndex(callback);\n}\nfunction getFieldNames(props) {\n  var fieldNames = props.fieldNames,\n    filedNames = props.filedNames;\n  if ('filedNames' in props) {\n    return filedNames; // For old compatibility\n  }\n  return fieldNames;\n}\nfunction getFilledFieldNames(props) {\n  var fieldNames = getFieldNames(props) || {};\n  var names = {\n    children: fieldNames.children || 'children',\n    label: fieldNames.label || 'label',\n    value: fieldNames.value || 'value'\n  };\n  return names;\n}\nfunction flattenTree(options, props) {\n  var ancestor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var names = getFilledFieldNames(props);\n  var flattenOptions = [];\n  var childrenName = names.children;\n  options.forEach(function (option) {\n    var path = ancestor.concat(option);\n    if (props.changeOnSelect || !option[childrenName] || !option[childrenName].length) {\n      flattenOptions.push(path);\n    }\n    if (option[childrenName]) {\n      flattenOptions = flattenOptions.concat(flattenTree(option[childrenName], props, path));\n    }\n  });\n  return flattenOptions;\n}\nvar defaultDisplayRender = function defaultDisplayRender(label) {\n  return label.join(' / ');\n};\nfunction warningValueNotExist(list) {\n  var fieldNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (list || []).forEach(function (item) {\n    var valueFieldName = fieldNames.value || 'value';\n    (0, _warning[\"default\"])(valueFieldName in item, 'Cascader', 'Not found `value` in `options`.');\n    warningValueNotExist(item[fieldNames.children || 'children'], fieldNames);\n  });\n}\nvar Cascader = /*#__PURE__*/function (_React$Component) {\n  _inherits(Cascader, _React$Component);\n  var _super = _createSuper(Cascader);\n  function Cascader(props) {\n    var _this;\n    _classCallCheck(this, Cascader);\n    _this = _super.call(this, props);\n    _this.cachedOptions = [];\n    _this.setValue = function (value) {\n      var selectedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n      var onChange = _this.props.onChange;\n      if (onChange) {\n        onChange(value, selectedOptions);\n      }\n    };\n    _this.saveInput = function (node) {\n      _this.input = node;\n    };\n    _this.handleChange = function (value, selectedOptions) {\n      _this.setState({\n        inputValue: ''\n      });\n      if (selectedOptions[0].__IS_FILTERED_OPTION) {\n        var unwrappedValue = value[0];\n        var unwrappedSelectedOptions = selectedOptions[0].path;\n        _this.setValue(unwrappedValue, unwrappedSelectedOptions);\n        return;\n      }\n      _this.setValue(value, selectedOptions);\n    };\n    _this.handlePopupVisibleChange = function (popupVisible) {\n      if (!('popupVisible' in _this.props)) {\n        _this.setState(function (state) {\n          return {\n            popupVisible: popupVisible,\n            inputFocused: popupVisible,\n            inputValue: popupVisible ? state.inputValue : ''\n          };\n        });\n      }\n      var onPopupVisibleChange = _this.props.onPopupVisibleChange;\n      if (onPopupVisibleChange) {\n        onPopupVisibleChange(popupVisible);\n      }\n    };\n    _this.handleInputBlur = function () {\n      _this.setState({\n        inputFocused: false\n      });\n    };\n    _this.handleInputClick = function (e) {\n      var _this$state = _this.state,\n        inputFocused = _this$state.inputFocused,\n        popupVisible = _this$state.popupVisible; // Prevent `Trigger` behaviour.\n\n      if (inputFocused || popupVisible) {\n        e.stopPropagation();\n        if (e.nativeEvent.stopImmediatePropagation) {\n          e.nativeEvent.stopImmediatePropagation();\n        }\n      }\n    };\n    _this.handleKeyDown = function (e) {\n      // SPACE => https://github.com/ant-design/ant-design/issues/16871\n      if (e.keyCode === _KeyCode[\"default\"].BACKSPACE || e.keyCode === _KeyCode[\"default\"].SPACE) {\n        e.stopPropagation();\n      }\n    };\n    _this.handleInputChange = function (e) {\n      var inputValue = e.target.value;\n      _this.setState({\n        inputValue: inputValue\n      });\n    };\n    _this.clearSelection = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (!_this.state.inputValue) {\n        _this.setValue([]);\n        _this.handlePopupVisibleChange(false);\n      } else {\n        _this.setState({\n          inputValue: ''\n        });\n      }\n    };\n    _this.renderCascader = function (_ref, locale) {\n      var _classNames, _classNames2, _classNames3, _classNames4;\n      var getContextPopupContainer = _ref.getPopupContainer,\n        getPrefixCls = _ref.getPrefixCls,\n        renderEmpty = _ref.renderEmpty;\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        props = _assertThisInitialize.props,\n        state = _assertThisInitialize.state;\n      var customizePrefixCls = props.prefixCls,\n        customizeInputPrefixCls = props.inputPrefixCls,\n        children = props.children,\n        _props$placeholder = props.placeholder,\n        placeholder = _props$placeholder === void 0 ? locale.placeholder || 'Please select' : _props$placeholder,\n        size = props.size,\n        disabled = props.disabled,\n        className = props.className,\n        style = props.style,\n        allowClear = props.allowClear,\n        _props$showSearch = props.showSearch,\n        showSearch = _props$showSearch === void 0 ? false : _props$showSearch,\n        suffixIcon = props.suffixIcon,\n        notFoundContent = props.notFoundContent,\n        otherProps = __rest(props, [\"prefixCls\", \"inputPrefixCls\", \"children\", \"placeholder\", \"size\", \"disabled\", \"className\", \"style\", \"allowClear\", \"showSearch\", \"suffixIcon\", \"notFoundContent\"]);\n      var value = state.value,\n        inputFocused = state.inputFocused;\n      var prefixCls = getPrefixCls('cascader', customizePrefixCls);\n      var inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n      var sizeCls = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(inputPrefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(inputPrefixCls, \"-sm\"), size === 'small'), _classNames));\n      var clearIcon = allowClear && !disabled && value.length > 0 || state.inputValue ? /*#__PURE__*/React.createElement(_icon[\"default\"], {\n        type: \"close-circle\",\n        theme: \"filled\",\n        className: \"\".concat(prefixCls, \"-picker-clear\"),\n        onClick: _this.clearSelection\n      }) : null;\n      var arrowCls = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-picker-arrow\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-picker-arrow-expand\"), state.popupVisible), _classNames2));\n      var pickerCls = (0, _classnames[\"default\"])(className, \"\".concat(prefixCls, \"-picker\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-with-value\"), state.inputValue), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-disabled\"), disabled), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-\").concat(size), !!size), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-show-search\"), !!showSearch), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-picker-focused\"), inputFocused), _classNames3)); // Fix bug of https://github.com/facebook/react/pull/5004\n      // and https://fb.me/react-unknown-prop\n\n      var inputProps = (0, _omit[\"default\"])(otherProps, ['onChange', 'options', 'popupPlacement', 'transitionName', 'displayRender', 'onPopupVisibleChange', 'changeOnSelect', 'expandTrigger', 'popupVisible', 'getPopupContainer', 'loadData', 'popupClassName', 'filterOption', 'renderFilteredOption', 'sortFilteredOption', 'notFoundContent', 'fieldNames', 'filedNames']);\n      var options = props.options;\n      var names = getFilledFieldNames(_this.props);\n      if (options && options.length > 0) {\n        if (state.inputValue) {\n          options = _this.generateFilteredOptions(prefixCls, renderEmpty);\n        }\n      } else {\n        var _ref2;\n        options = [(_ref2 = {}, _defineProperty(_ref2, names.value, 'ANT_CASCADER_NOT_FOUND'), _defineProperty(_ref2, names.label, notFoundContent || renderEmpty('Cascader')), _defineProperty(_ref2, \"disabled\", true), _defineProperty(_ref2, \"isEmptyNode\", true), _ref2)];\n      } // Dropdown menu should keep previous status until it is fully closed.\n\n      if (!state.popupVisible) {\n        options = _this.cachedOptions;\n      } else {\n        _this.cachedOptions = options;\n      }\n      var dropdownMenuColumnStyle = {};\n      var isNotFound = (options || []).length === 1 && options[0].isEmptyNode;\n      if (isNotFound) {\n        dropdownMenuColumnStyle.height = 'auto'; // Height of one row.\n      } // The default value of `matchInputWidth` is `true`\n\n      var resultListMatchInputWidth = showSearch.matchInputWidth !== false;\n      if (resultListMatchInputWidth && (state.inputValue || isNotFound) && _this.input) {\n        dropdownMenuColumnStyle.width = _this.input.input.offsetWidth;\n      }\n      var inputIcon = suffixIcon && (/*#__PURE__*/React.isValidElement(suffixIcon) ? /*#__PURE__*/React.cloneElement(suffixIcon, {\n        className: (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, suffixIcon.props.className, suffixIcon.props.className), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-picker-arrow\"), true), _classNames4))\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-picker-arrow\")\n      }, suffixIcon)) || /*#__PURE__*/React.createElement(_icon[\"default\"], {\n        type: \"down\",\n        className: arrowCls\n      });\n      var input = children || /*#__PURE__*/React.createElement(\"span\", {\n        style: style,\n        className: pickerCls\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-picker-label\")\n      }, _this.getLabel()), /*#__PURE__*/React.createElement(_input[\"default\"], _extends({}, inputProps, {\n        tabIndex: \"-1\",\n        ref: _this.saveInput,\n        prefixCls: inputPrefixCls,\n        placeholder: value && value.length > 0 ? undefined : placeholder,\n        className: \"\".concat(prefixCls, \"-input \").concat(sizeCls),\n        value: state.inputValue,\n        disabled: disabled,\n        readOnly: !showSearch,\n        autoComplete: inputProps.autoComplete || 'off',\n        onClick: showSearch ? _this.handleInputClick : undefined,\n        onBlur: showSearch ? _this.handleInputBlur : undefined,\n        onKeyDown: _this.handleKeyDown,\n        onChange: showSearch ? _this.handleInputChange : undefined\n      })), clearIcon, inputIcon);\n      var expandIcon = /*#__PURE__*/React.createElement(_icon[\"default\"], {\n        type: \"right\"\n      });\n      var loadingIcon = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-menu-item-loading-icon\")\n      }, /*#__PURE__*/React.createElement(_icon[\"default\"], {\n        type: \"redo\",\n        spin: true\n      }));\n      var getPopupContainer = props.getPopupContainer || getContextPopupContainer;\n      var rest = (0, _omit[\"default\"])(props, ['inputIcon', 'expandIcon', 'loadingIcon']);\n      return /*#__PURE__*/React.createElement(_rcCascader[\"default\"], _extends({}, rest, {\n        prefixCls: prefixCls,\n        getPopupContainer: getPopupContainer,\n        options: options,\n        value: value,\n        popupVisible: state.popupVisible,\n        onPopupVisibleChange: _this.handlePopupVisibleChange,\n        onChange: _this.handleChange,\n        dropdownMenuColumnStyle: dropdownMenuColumnStyle,\n        expandIcon: expandIcon,\n        loadingIcon: loadingIcon\n      }), input);\n    };\n    _this.state = {\n      value: props.value || props.defaultValue || [],\n      inputValue: '',\n      inputFocused: false,\n      popupVisible: props.popupVisible,\n      flattenOptions: props.showSearch ? flattenTree(props.options, props) : undefined,\n      prevProps: props\n    };\n    return _this;\n  }\n  _createClass(Cascader, [{\n    key: \"getLabel\",\n    value: function getLabel() {\n      var _this$props = this.props,\n        options = _this$props.options,\n        _this$props$displayRe = _this$props.displayRender,\n        displayRender = _this$props$displayRe === void 0 ? defaultDisplayRender : _this$props$displayRe;\n      var names = getFilledFieldNames(this.props);\n      var value = this.state.value;\n      var unwrappedValue = Array.isArray(value[0]) ? value[0] : value;\n      var selectedOptions = (0, _arrayTreeFilter[\"default\"])(options, function (o, level) {\n        return o[names.value] === unwrappedValue[level];\n      }, {\n        childrenKeyName: names.children\n      });\n      var label = selectedOptions.map(function (o) {\n        return o[names.label];\n      });\n      return displayRender(label, selectedOptions);\n    }\n  }, {\n    key: \"generateFilteredOptions\",\n    value: function generateFilteredOptions(prefixCls, renderEmpty) {\n      var _this2 = this,\n        _ref4;\n      var _this$props2 = this.props,\n        showSearch = _this$props2.showSearch,\n        notFoundContent = _this$props2.notFoundContent;\n      var names = getFilledFieldNames(this.props);\n      var _showSearch$filter = showSearch.filter,\n        filter = _showSearch$filter === void 0 ? defaultFilterOption : _showSearch$filter,\n        _showSearch$render = showSearch.render,\n        render = _showSearch$render === void 0 ? defaultRenderFilteredOption : _showSearch$render,\n        _showSearch$sort = showSearch.sort,\n        sort = _showSearch$sort === void 0 ? defaultSortFilteredOption : _showSearch$sort,\n        _showSearch$limit = showSearch.limit,\n        limit = _showSearch$limit === void 0 ? defaultLimit : _showSearch$limit;\n      var _this$state2 = this.state,\n        _this$state2$flattenO = _this$state2.flattenOptions,\n        flattenOptions = _this$state2$flattenO === void 0 ? [] : _this$state2$flattenO,\n        inputValue = _this$state2.inputValue; // Limit the filter if needed\n\n      var filtered;\n      if (limit > 0) {\n        filtered = [];\n        var matchCount = 0; // Perf optimization to filter items only below the limit\n\n        flattenOptions.some(function (path) {\n          var match = filter(_this2.state.inputValue, path, names);\n          if (match) {\n            filtered.push(path);\n            matchCount += 1;\n          }\n          return matchCount >= limit;\n        });\n      } else {\n        (0, _warning[\"default\"])(typeof limit !== 'number', 'Cascader', \"'limit' of showSearch should be positive number or false.\");\n        filtered = flattenOptions.filter(function (path) {\n          return filter(_this2.state.inputValue, path, names);\n        });\n      }\n      filtered.sort(function (a, b) {\n        return sort(a, b, inputValue, names);\n      });\n      if (filtered.length > 0) {\n        return filtered.map(function (path) {\n          var _ref3;\n          return _ref3 = {\n            __IS_FILTERED_OPTION: true,\n            path: path\n          }, _defineProperty(_ref3, names.value, path.map(function (o) {\n            return o[names.value];\n          })), _defineProperty(_ref3, names.label, render(inputValue, path, prefixCls, names)), _defineProperty(_ref3, \"disabled\", path.some(function (o) {\n            return !!o.disabled;\n          })), _defineProperty(_ref3, \"isEmptyNode\", true), _ref3;\n        });\n      }\n      return [(_ref4 = {}, _defineProperty(_ref4, names.value, 'ANT_CASCADER_NOT_FOUND'), _defineProperty(_ref4, names.label, notFoundContent || renderEmpty('Cascader')), _defineProperty(_ref4, \"disabled\", true), _defineProperty(_ref4, \"isEmptyNode\", true), _ref4)];\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(_configProvider.ConfigConsumer, null, function (configArgument) {\n        return /*#__PURE__*/React.createElement(_LocaleReceiver[\"default\"], null, function (locale) {\n          return _this3.renderCascader(configArgument, locale);\n        });\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, _ref5) {\n      var prevProps = _ref5.prevProps;\n      var newState = {\n        prevProps: nextProps\n      };\n      if ('value' in nextProps) {\n        newState.value = nextProps.value || [];\n      }\n      if ('popupVisible' in nextProps) {\n        newState.popupVisible = nextProps.popupVisible;\n      }\n      if (nextProps.showSearch && prevProps.options !== nextProps.options) {\n        newState.flattenOptions = flattenTree(nextProps.options, nextProps);\n      }\n      if (process.env.NODE_ENV !== 'production' && nextProps.options) {\n        warningValueNotExist(nextProps.options, getFieldNames(nextProps));\n      }\n      return newState;\n    }\n  }]);\n  return Cascader;\n}(React.Component);\nCascader.defaultProps = {\n  transitionName: 'slide-up',\n  popupPlacement: 'bottomLeft',\n  options: [],\n  disabled: false,\n  allowClear: true\n};\n(0, _reactLifecyclesCompat.polyfill)(Cascader);\nvar _default = Cascader;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}